name: Build System Images

on:
  push:
    branches: [ main ]
    tags: [ '*.*.*' ]

jobs:
  setup-runner:
    runs-on: ubuntu-latest
    outputs:
      droplet_id: ${{ steps.make-droplet.outputs.droplet_id }}
    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DO_PAT }}
    steps:
      - id: make-droplet
        run: |
          IMAGE_ID=$(curl -v -X GET \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer "$DIGITALOCEAN_TOKEN"' \
          "https://api.digitalocean.com/v2/snapshots" | jq '.snapshots[] | select(.name=="pi4-github-action") | .id')

          DROPLET_ID=$(curl -X POST \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer $DIGITALOCEAN_TOKEN"' \
          -d '{"name":"pi4","region":"nyc1","size":"s-4vcpu-8gb-amd","image":$IMAGE_ID}' \
          "https://api.digitalocean.com/v2/droplets" | jq .droplet.id)
          
          echo "::set-output droplet_id=$DROPLET_ID"


  build-system-image:

    runs-on: [self-hosted, pi4]
    needs: setup-runner
    timeout-minutes: 2880
    permissions:
      contents: read
      packages: write

    env:
      SKIFF_CONFIG: pi/4x64,apps/satellite
      SKIFF_WORKPLACE: pi4

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cache Buildroot compile cache + dls
        uses: actions/cache@v2
        with:
          path: ~/br-cache
          key: ${{ runner.os }}-buildroot-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildroot-

      - name: Build Pi4 Image
        run: |
          export TERM=xterm
          export BR2_CCACHE_DIR=${HOME}/br-cache/ccache
          export BR2_DL_DIR=${HOME}/br-cache/dl
          make configure && make compile

      - name: Make SD Image
        run: sudo TERM=xterm PI_IMAGE=/tmp/rhasspy-satellite-pi4.img make cmd/apps/satellite/buildimage

      - name: Gzip the SD Image
        run: pigz -9 -f -k /tmp/rhasspy-satellite-pi4.img

      - name: Upload!
        uses: actions/upload-artifact@v2
        with:
          name: rhasspy-satellite-pi4.img
          path: /tmp/rhasspy-satellite-pi4.img.gz
          
  teardown-runner:
    runs-on: ubuntu-latest
    needs: [setup-runner, build-system-image]
    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DO_PAT }}
    steps:
      - name: Shutdwon Droplet
        run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
          -d '{"type":"shutdown"}' \
          "https://api.digitalocean.com/v2/droplets/${{ needs.setup-runner.output.droplet_id }}/actions"
          
      - name: Poweroff Droplet
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
            -d '{"type":"power_off"}' \
            "https://api.digitalocean.com/v2/droplets/${{ needs.setup-runner.output.droplet_id }}/actions"

      - name: Delete Droplet
        run: |
          curl -X DELETE \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
          "https://api.digitalocean.com/v2/droplets/${{ needs.setup-runner.output.droplet_id }}"
